import * as React from "react";
import Svg, { G, Path } from "react-native-svg";
import { theme } from "./theme";
export const CameraIcon = (props) => (
  <Svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" {...props}>
    <Path d="M12 9a3.75 3.75 0 1 0 0 7.5A3.75 3.75 0 0 0 12 9Z" />
    <Path
      fillRule="evenodd"
      d="M9.344 3.071a49.52 49.52 0 0 1 5.312 0c.967.052 1.83.585 2.332 1.39l.821 1.317c.24.383.645.643 1.11.71.386.054.77.113 1.152.177 1.432.239 2.429 1.493 2.429 2.909V18a3 3 0 0 1-3 3h-15a3 3 0 0 1-3-3V9.574c0-1.416.997-2.67 2.429-2.909.382-.064.766-.123 1.151-.178a1.56 1.56 0 0 0 1.11-.71l.822-1.315a2.942 2.942 0 0 1 2.332-1.39ZM6.75 12.75a5.25 5.25 0 1 1 10.5 0 5.25 5.25 0 0 1-10.5 0Zm12-1.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Z"
      clipRule="evenodd"
    />
  </Svg>
);

export const CalenderIcon = (props) => (
  <Svg
    fill="none"
    viewBox="0 0 24 24"
    strokeWidth={2}
    stroke={theme.colors.primaryRed}
    {...props}
  >
    <Path
      strokeLinecap="round"
      strokeLinejoin="round"
      d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5m-9-6h.008v.008H12v-.008ZM12 15h.008v.008H12V15Zm0 2.25h.008v.008H12v-.008ZM9.75 15h.008v.008H9.75V15Zm0 2.25h.008v.008H9.75v-.008ZM7.5 15h.008v.008H7.5V15Zm0 2.25h.008v.008H7.5v-.008Zm6.75-4.5h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V15Zm0 2.25h.008v.008h-.008v-.008Zm2.25-4.5h.008v.008H16.5v-.008Zm0 2.25h.008v.008H16.5V15Z"
    />
  </Svg>
);

export const LockIcon = (props) => (
  <Svg
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
    fill="none"
    {...props}
  >
    <Path
      fill="#000000"
      fillRule="evenodd"
      d="M3 12a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v7a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3v-7zm10 2a1 1 0 1 0-2 0v3a1 1 0 1 0 2 0v-3z"
      clipRule="evenodd"
    />
    <Path
      stroke="#000000"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M8 10V7a4 4 0 0 1 4-4v0a4 4 0 0 1 4 4v3"
    />
  </Svg>
);

export const ClearIcon = (props) => (
  <Svg width={24} height={18} viewBox="0 0 24 18" fill="none" {...props}>
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M6.4269 1.70419C6.33003 1.7987 6.22599 1.90229 6.08705 2.04204C6.08705 2.04204 3.7982 4.33244 3.79055 4.33905C3.71954 4.40641 3.66045 4.46401 3.59919 4.5249C3.57104 4.55305 3.546 4.5778 3.49261 4.63032C3.4467 4.67548 3.42545 4.69645 3.39899 4.72277L1.32949 6.7946C1.28508 6.84067 1.24697 6.87947 1.19796 6.9287L1.14217 6.98478C1.07898 7.04809 1.02899 7.0996 0.95834 7.17329C0.796275 7.33321 0.631939 7.51406 0.477196 7.70372C0.333415 7.85703 0.217338 8.03424 0.134231 8.22748L0.112272 8.28594C-0.0374241 8.74937 -0.0374241 9.24816 0.112272 9.71159L0.135197 9.77229C0.218934 9.96505 0.335628 10.1416 0.479954 10.2941C0.634044 10.4835 0.79826 10.6644 0.971886 10.836C1.00841 10.8754 1.06223 10.9303 1.13412 11.0022C1.18377 11.0519 1.20513 11.0733 1.23175 11.1001C1.26613 11.1348 1.29585 11.1651 1.32344 11.1937L3.39839 13.2725C3.5012 13.3753 3.54722 13.421 3.62955 13.5013C3.69723 13.5682 3.73729 13.6072 3.81146 13.6756L6.0891 15.9565C6.25981 16.1273 6.3364 16.2035 6.43293 16.2983C6.55841 16.4239 6.64112 16.505 6.77032 16.6313C6.819 16.6826 6.83724 16.7015 6.86219 16.7247C7.15378 17.0177 7.50944 17.2767 7.89889 17.4754C8.28873 17.6717 8.70205 17.8081 9.12862 17.8818C9.52828 17.9476 9.9271 17.9828 10.3269 17.9878C10.4964 17.9916 10.6665 17.9939 10.8346 17.9945L11.2348 17.9945H18.6805C18.835 17.9945 18.9882 17.9923 19.2006 17.9877C19.598 17.9829 20.0008 17.9475 20.3992 17.8821C20.8343 17.8069 21.2505 17.6692 21.6397 17.4726C22.0341 17.2732 22.394 17.0123 22.706 16.6997C23.0167 16.3878 23.2765 16.0301 23.4767 15.6388C23.6748 15.2444 23.812 14.8274 23.8858 14.3971C23.9518 13.9938 23.9869 13.5912 23.9917 13.1878C23.9947 13.0887 23.9961 13.0014 23.9984 12.8071L24 12.6828L24.0001 12.0697V5.28228L23.9989 5.1749C23.9976 5.05516 23.997 5.00286 23.9958 4.93575C23.9947 4.87282 23.9934 4.81509 23.9918 4.75948C23.9873 4.37159 23.9525 3.97263 23.888 3.57797C23.8138 3.14595 23.6778 2.7325 23.4836 2.34562C23.2825 1.95254 23.0244 1.59745 22.7163 1.28846C22.4081 0.978056 22.051 0.718337 21.6595 0.520145C21.2732 0.324766 20.8603 0.187962 20.434 0.114105C20.0325 0.0487977 19.6336 0.0139583 19.2338 0.00872262C19.0528 0.00433858 18.8857 0.00199973 18.7251 0.00199973C18.563 0.000336839 18.4289 0 18.1279 0H11.4324C11.1336 0 10.9986 0.000338889 10.8292 0.00203305C10.6756 0.00199973 10.5091 0.00432366 10.3181 0.00885285C9.92594 0.0140027 9.5277 0.0488485 9.13367 0.112975C8.7003 0.188085 8.28703 0.324739 7.90046 0.519647C7.5081 0.719534 7.15225 0.978809 6.84371 1.28905C6.82941 1.30311 6.81895 1.31412 6.73159 1.40737C6.62322 1.51013 6.52357 1.60718 6.4269 1.70419ZM3.83563 4.30126L3.83809 4.29935C3.8351 4.30159 3.83302 4.30316 3.83045 4.30529L3.83563 4.30126ZM7.03212 15.0142L4.73011 12.7089C4.73011 12.7089 4.68419 12.6671 4.67941 12.663C4.64389 12.6291 4.61334 12.5992 4.53702 12.5238C4.48193 12.4704 4.43907 12.4278 4.34149 12.3302L2.27486 10.2599C2.25062 10.2347 2.21686 10.2002 2.17856 10.1616C2.15011 10.1329 2.12713 10.1099 2.0768 10.0596C2.01351 9.99626 1.96808 9.94987 1.92572 9.90489C1.76389 9.74434 1.62689 9.59277 1.49874 9.43386L1.45482 9.38461C1.42091 9.35018 1.39252 9.31079 1.37059 9.26786C1.32055 9.0915 1.32067 8.90464 1.37097 8.72833C1.39293 8.68463 1.42148 8.64449 1.45567 8.60935L1.49605 8.56386C1.62491 8.40463 1.76248 8.25264 1.90815 8.10862C1.98619 8.02757 2.0313 7.98108 2.06542 7.9465C2.10857 7.90355 2.10864 7.90348 2.14257 7.86944L2.14259 7.86943L2.14274 7.86928C2.19696 7.81481 2.24033 7.77066 2.28196 7.7273L4.34075 5.66636C4.36335 5.64388 4.38249 5.625 4.4366 5.57178C4.48337 5.52577 4.51045 5.499 4.54046 5.46899C4.5869 5.42283 4.63257 5.37819 4.67743 5.33519C4.68728 5.32695 4.69876 5.31631 4.73143 5.28602L4.73143 5.28601L7.03143 2.98302C7.1672 2.84645 7.26704 2.74705 7.36478 2.6516C7.45876 2.55738 7.54948 2.46903 7.6454 2.37805C7.66667 2.3582 7.67938 2.34492 7.73809 2.28262L7.78451 2.23358C7.99799 2.01897 8.23905 1.84334 8.50315 1.70878C8.76983 1.57433 9.0576 1.47917 9.35463 1.42767C9.67686 1.37526 10.0094 1.34617 10.3427 1.34176C10.5309 1.33733 10.6872 1.33515 10.8359 1.33515C11.006 1.33348 11.138 1.33315 11.4324 1.33315H18.1279C18.4244 1.33315 18.5556 1.33348 18.7184 1.33512C18.874 1.33515 19.0307 1.33734 19.2091 1.34162C19.5503 1.34613 19.8836 1.37524 20.2133 1.42883C20.5025 1.47899 20.7894 1.57402 21.0576 1.70966C21.3216 1.84333 21.5626 2.01863 21.7713 2.22878C21.9826 2.44069 22.1588 2.68312 22.2945 2.94831C22.4274 3.21318 22.5221 3.50121 22.5732 3.79843C22.6261 4.12179 22.655 4.45412 22.659 4.78723C22.6607 4.84881 22.6619 4.90103 22.6629 4.95867C22.6639 5.02195 22.6646 5.07237 22.6658 5.18924L22.667 5.29027L22.6669 5.87986V12.668L22.6654 12.7914C22.6632 12.9778 22.6618 13.0598 22.6589 13.1601C22.6546 13.5086 22.6253 13.8445 22.571 14.1768C22.5203 14.4722 22.4245 14.7635 22.2876 15.036C22.1526 15.2998 21.9746 15.545 21.762 15.7584C21.5506 15.9702 21.306 16.1474 21.0383 16.2829C20.7673 16.4198 20.4772 16.5157 20.1778 16.5675C19.8508 16.6211 19.5147 16.6506 19.1779 16.6548C18.968 16.6593 18.8234 16.6614 18.6805 16.6614H10.8372C10.68 16.6608 10.5179 16.6586 10.3499 16.6549C10.0108 16.6506 9.67879 16.6213 9.35037 16.5673C9.05858 16.5168 8.77084 16.4219 8.50168 16.2863C8.24032 16.1529 7.99872 15.977 7.78899 15.7667C7.77643 15.7544 7.75903 15.7364 7.737 15.7132L7.73427 15.7103C7.68179 15.655 7.66995 15.6425 7.65754 15.6306L7.64255 15.6165C7.56634 15.545 7.49187 15.472 7.37141 15.3515C7.27443 15.2562 7.1997 15.1818 7.03212 15.0142ZM11.8128 12.525C11.7587 12.5786 11.6939 12.6223 11.6208 12.6526C11.3974 12.7451 11.1402 12.694 10.9692 12.523C10.8566 12.4108 10.7934 12.2584 10.7934 12.0995C10.7934 11.9406 10.8566 11.7883 10.9692 11.6761V11.6774C11.0013 11.6452 11.0365 11.6173 11.074 11.5938L13.6688 8.99576L10.9692 6.29914L10.9778 6.2905C10.924 6.23636 10.8802 6.17146 10.8499 6.0982C10.7573 5.87477 10.8085 5.61759 10.9795 5.44659C11.0917 5.33365 11.2444 5.27014 11.4036 5.27014C11.5628 5.27014 11.7155 5.33365 11.8277 5.44659H11.8251C11.854 5.47556 11.8796 5.50702 11.9016 5.54036L14.5132 8.15034L17.1322 5.52817C17.1524 5.49888 17.1756 5.47099 17.2017 5.44492C17.3727 5.27391 17.6298 5.22274 17.8533 5.31529C18.0767 5.40783 18.2224 5.62586 18.2224 5.8677C18.2224 6.02852 18.158 6.17882 18.0491 6.28868L18.0559 6.29547L15.359 8.99562L17.9689 11.6038C18.001 11.6253 18.0311 11.65 18.0589 11.6777L18.0575 11.6791C18.2286 11.8501 18.2797 12.1072 18.1872 12.3307C18.0946 12.5541 17.8766 12.6998 17.6348 12.6998C17.4739 12.6998 17.3236 12.6354 17.2138 12.5265L17.2087 12.5316L14.5149 9.84084L11.8234 12.5356L11.8128 12.525Z"
      fill="black"
    />
  </Svg>
);

export const AllowNotificationIcon = (props) => (
  <Svg
    x="0px"
    y="0px"
    viewBox="0 0 512 512"
    xmlSpace="preserve"
    {...props}
  >
    <G>
      <G>
        <Path d="M439.653,348.114v-97.679c-0.009-86.034-59.231-158.027-139.081-177.975c3.411-6.764,5.515-14.294,5.515-22.373 C306.087,22.468,283.619,0,256,0c-27.619,0-50.087,22.468-50.087,50.087c0,8.08,2.104,15.608,5.515,22.373 c-79.85,19.948-139.072,91.941-139.081,177.975v97.679c-19.41,6.901-33.384,25.233-33.391,47.017 c0.01,27.668,22.419,50.075,50.087,50.085h85.158C181.938,483.321,215.606,511.991,256,512 c40.392-0.009,74.061-28.679,81.799-66.784h85.158c27.668-0.01,50.077-22.417,50.087-50.085 C473.036,373.347,459.063,355.015,439.653,348.114z M256,33.391c9.196,0,16.696,7.5,16.696,16.696 c0,9.196-7.5,16.696-16.696,16.696c-9.196,0-16.696-7.5-16.696-16.696C239.304,40.891,246.805,33.391,256,33.391z  M172.522,250.435c0,9.22-7.475,16.696-16.696,16.696s-16.696-7.475-16.696-16.696c0.031-64.492,52.378-116.841,116.87-116.87 c9.22,0,16.696,7.473,16.696,16.696c0,9.22-7.475,16.696-16.696,16.696v-0.002C210.013,167.038,172.605,204.447,172.522,250.435z  M256,478.61c-21.77-0.04-40.084-14-46.998-33.394h93.997C296.084,464.61,277.77,478.57,256,478.61z" />
      </G>
    </G>
  </Svg>
);
